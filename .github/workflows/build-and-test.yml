# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and Test

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install system dependencies
        run: |
          sudo apt-get install libsndfile1
          sudo apt-get install ffmpeg
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install flake8 pytest
      - name: Install tempo_eval
        run: |
          pip install .[tests,docs]
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          python -m pytest --verbose --cov-report=xml --cov=tempo_eval --junitxml=pytest_report${{ matrix.python-version }}.xml
#          coverage run --source ./tempo_eval -m pytest --verbose --junitxml=pytest_report${{ matrix.python-version }}.xml
#          coverage report -m
#          coverage xml -o coverage${{ matrix.python-version }}.xml
      - name: Build docs
        run: |
          make html
        working-directory: ./docs
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: pytest_report${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
#      - name: Upload coverageresults
#        uses: actions/upload-artifact@v2
#        with:
#          name: coverage-${{ matrix.python-version }}
#          path: coverage${{ matrix.python-version }}.xml
#        # Use always() to always run this step to publish test results when there are test failures
#        if: ${{ always() }}
      - name: Upload CodeCov Report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ always() }}
